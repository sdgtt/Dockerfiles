name: ci-build-deploy

on: push

jobs:
  docker:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        project:
          [
            "hdl",
            "sw",
            "libiio-ubuntu-18.04",
            "libiio-ubuntu-20.04",
            "libiio-fedora-34",
          ]
        include:
          - project: "hdl"
            DOCKERFILE: "Dockerfile-hdl"
            TAG_ROOT: "hdl-ci"
          - project: "sw"
            DOCKERFILE: "Dockerfile-sw"
            TAG_ROOT: "sw-ci"
          - project: "libiio-ubuntu-18.04"
            DOCKERFILE: "libiio/Dockerfile-ubuntu-18.04"
            TAG_ROOT: "libiio_ubuntu_18_04-ci"
          - project: "libiio-ubuntu-20.04"
            DOCKERFILE: "libiio/Dockerfile-ubuntu-20.04"
            TAG_ROOT: "libiio_ubuntu_20_04-ci"
          - project: "libiio-fedora-34"
            DOCKERFILE: "libiio/Dockerfile-fedora-34"
            TAG_ROOT: "libiio_fedora_34-ci"

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        if: github.ref == 'refs/heads/main'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          file: ${{ matrix.DOCKERFILE }}
          push: ${{ github.ref == 'refs/heads/main' }}
          tags: tfcollins/${{ matrix.TAG_ROOT }}:latest

  docker_arm:
    runs-on: ubuntu-18.04
    strategy:
      fail-fast: false
      matrix:
        project: ["libiio-ubuntu-18.04"]
        include:
          - project: "libiio-ubuntu-18.04"
            DOCKERFILE: "libiio/Dockerfile-ubuntu-18.04"
            TAG_ROOT: "libiio_ubuntu_18_04-ci-arm-ppc"
            ARCH: linux/arm64

    # steps:
    #   - name: Checkout
    #     uses: actions/checkout@v2
    #   - name: Set up QEMU
    #     uses: docker/setup-qemu-action@v1
    #   - name: Set up Docker Buildx
    #     uses: docker/setup-buildx-action@v1

    #   - name: Login to DockerHub
    #     if: github.ref == 'refs/heads/main'
    #     uses: docker/login-action@v1
    #     with:
    #       username: ${{ secrets.DOCKERHUB_USERNAME }}
    #       password: ${{ secrets.DOCKERHUB_TOKEN }}

    #   - name: Build and push
    #     id: docker_build
    #     uses: docker/build-push-action@v2
    #     with:
    #       file: ${{ matrix.DOCKERFILE }}
    #       platforms: linux/arm64,linux/ppc64le,linux/s390x,linux/arm/v7
    #       push: ${{ github.ref == 'refs/heads/main' }}
    #       tags: tfcollins/${{ matrix.TAG_ROOT }}:latest

    steps:
      - run: |
          sudo apt-get update -y
          sudo apt-get install -y qemu-system-ppc64
          sudo apt-get install qemu
          sudo docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
        name: "Setup"
      - run: |
          echo 'sudo docker run --name container -t --privileged -v "$GITHUB_WORKSPACE"/libiio:"/ci" -v "/usr/bin/qemu-$ARCH-static":"/usr/bin/qemu-$ARCH-static" "$image" /bin/bash -c "cd /ci/ && chmod +x ./$build_script && ./$build_script"'
          sudo docker run --name container -t --privileged -v "$GITHUB_WORKSPACE"/libiio:"/ci" -v "/usr/bin/qemu-$ARCH-static":"/usr/bin/qemu-$ARCH-static" "$image" /bin/bash -c "cd /ci/ && chmod +x ./$build_script && ./$build_script"
          sudo docker stop container
          sudo docker commit container "$image"
        name: "Build"
